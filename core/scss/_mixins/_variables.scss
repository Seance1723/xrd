// XRD Framework
// Author: Rupak Biswas
// This file contains all the variable used in this application.



// Defining the Percentage based on (0-100 in 8 part) & multiple of 10
$per: () !default;
$per: map-merge(
    (
        0: 0,
        10: 10%,
        15: 15%,
        20: 20%,
        25: 25%,
        30: 30%,
        35: 35%,
        40: 40%,
        45: 45%,
        50: 50%,
        55: 55%,
        60: 60%,
        65: 65%,
        70: 70%,
        75: 75%,
        80: 80%,
        85: 85%,
        90: 90%,
        95: 95%,
        100: 100%,
    ),
    $per
);

// Defining the space ( px in rem )
$defSpace: 1rem !default;
$space: () !default;
$space: map-merge(
  (
    0: 0,
    8: 0.5rem,
    10: 0.625rem,
    12: 0.75rem,
    14: 0.875rem,
    16: $defSpace,
    18: ($defSpace + 0.125),
    20: ($defSpace + 0.25),
    22: ($defSpace + 0.375),
    24: ($defSpace + 0.5),
    26: ($defSpace + 0.625),
    28: ($defSpace + 0.75),
    30: ($defSpace + 0.875),
    32: ($defSpace * 2),
    34: (($defSpace * 2) + 0.125),
    36: (($defSpace * 2) + 0.25),
    38: (($defSpace * 2) + 0.375),
    40: (($defSpace * 2) + 0.5),
    42: (($defSpace * 2) + 0.625),
    44: (($defSpace * 2) + 0.75),
    46: (($defSpace * 2) + 0.875),
    48: ($defSpace * 3),
    50: (($defSpace * 3) + 0.125),
    52: (($defSpace * 3) + 0.25),
    54: (($defSpace * 3) + 0.375),
    56: (($defSpace * 3) + 0.5),
    58: (($defSpace * 3) + 0.625),
    60: (($defSpace * 3) + 0.75),
    62: (($defSpace * 3) + 0.875),
    64: ($defSpace * 4),
    66: (($defSpace * 4) + 0.125),
    68: (($defSpace * 4) + 0.25),
    70: (($defSpace * 4) + 0.375),
    72: (($defSpace * 4) + 0.5),
    74: (($defSpace * 4) + 0.625),
    76: (($defSpace * 4) + 0.75),
    78: (($defSpace * 4) + 0.875),
    80: ($defSpace * 5),
    82: (($defSpace * 5) + 0.125),
    84: (($defSpace * 5) + 0.25),
    86: (($defSpace * 5) + 0.375),
    88: (($defSpace * 5) + 0.5),
    90: (($defSpace * 5) + 0.625),
    92: (($defSpace * 5) + 0.75),
    94: (($defSpace * 5) + 0.875),
    96: ($defSpace * 6),
    98: (($defSpace * 6) + 0.125),
    100: (($defSpace * 6) + 0.25),
    110: (($defSpace * 6) + 0.875),
    120: (($defSpace * 7) + 0.5),
    130: (($defSpace * 8) + 0.125),
    140: (($defSpace * 8) + 0.75),
    150: (($defSpace * 9) + 0.375),
    160: ($defSpace * 10),
    170: (($defSpace * 10) + 0.625),
    180: (($defSpace * 11) + 0.25),
    190: (($defSpace * 11) + 0.875),
    200: (($defSpace * 12) + 0.5),
    210: (($defSpace * 13) + 0.125),
    220: (($defSpace * 13) + 0.75),
    230: (($defSpace * 14) + 0.375),
    240: ($defSpace * 15),
    250: (($defSpace * 15) + 0.625),
    260: (($defSpace * 16) + 0.25),
    270: (($defSpace * 16) + 0.875),
    280: (($defSpace * 17) + 0.5),
    290: (($defSpace * 18) + 0.5),
    300: (($defSpace * 18) + 0.125),
    310: (($defSpace * 19) + 0.75),
    320: ($defSpace * 20),
    330: (($defSpace * 20) + 0.625),
    340: (($defSpace * 21) + 0.25),
    350: (($defSpace * 21) + 0.875),
    360: (($defSpace * 22) + 0.5),
    370: (($defSpace * 23) + 0.5),
    380: (($defSpace * 23) + 0.125),
    390: (($defSpace * 24) + 0.75),
    400: ($defSpace * 25),
    450: (($defSpace * 28) + 0.125),
    500: (($defSpace * 31) + 0.25),
    550: (($defSpace * 34) + 0.375),
    600: (($defSpace * 37) + 0.5),
    650: (($defSpace * 40) + 0.625),
    700: (($defSpace * 43) + 0.75),
    750: (($defSpace * 46) + 0.875),
    800: ($defSpace * 50),
    850: (($defSpace * 53) + 0.125),
    900: (($defSpace * 56) + 0.25),
    1000: (($defSpace * 62) + 0.5),
    1200: ($defSpace * 75)
  ),
  $space
);